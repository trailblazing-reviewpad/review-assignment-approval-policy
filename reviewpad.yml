dictionaries:
 - name: reviewers-per-file-path
   spec:
     '**/authentication/**': '"security"'
     '**/db/**': '"dba"'
     '.github/workflows/**': '"devops"' 

workflows:
  - name: Review Assignment and Approval Policy
    run:
      # First mandatory approval level from the `developers` team
      - if: '!$hasRequiredApprovals(1, $team("developers"))'
        then:
          - $failCheckStatus("One approval is required from the 'developers' team")
          - if: '!$any($reviewers(), ($reviewer: String => $isElementOf($reviewer, $team("developers"))))'
            then: $assignReviewer($team("developers"), 1)
        else: 
          # Second mandatory approval level based on file changes
          - forEach: 
              key: $filePattern
              value: $teamName
              in: $dictionary("reviewers-per-file-path")
              do:
                - if: $hasFilePattern($filePattern) && !$hasRequiredApprovals(1, $team($teamName))
                  then: 
                    - $failCheckStatus($sprintf("One approval is required from team '%s' as one file matching '%s' has been touched", [$teamName, $filePattern]))
                    - if: '!$any($reviewers(), ($reviewer: String => $isElementOf($reviewer, $team($teamName))))'
                      then: $assignReviewer($team($teamName), 1)